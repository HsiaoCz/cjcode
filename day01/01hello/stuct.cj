// 任何变量总会关联一个值（一般是通过内存地址/寄存器关联），只是在使用时，对有些变量，我们将直接取用这个值本身，这被称为值类型变量

// 而对另一些变量，我们把这个值作为索引、取用这个索引指示的数据，这被称为引用类型变量

// 在给值类型变量赋值时，一般会产生拷贝操作，且原来绑定的数据/存储空间被覆写。在给引用类型变量赋值时，只是改变了引用关系，原来绑定的数据/存储空间不会被覆写。
// 用 let 定义的变量，要求变量被初始化后都不能再赋值。对于引用类型，这只是限定了引用关系不可改变，但是所引用的数据是可以被修改的。

// struct 是值类型
// class and Array 引用类型

static Copy {
    var data = 2012
}

class Share {
    var data = 2012
}

main(){
    let c1=Copy()
    var c2=c1
    c2.data=2023

    println("${c1.data}, ${c2.data}")

    let s1 = Share()
    let s2 = s1
    s2.data = 2023
    println("${s1.data}, ${s2.data}")
}

// 2012, 2023
// 2023, 2023